{
  "openapi": "3.0.3",
  "info": {
    "title": "Firma Partner API",
    "description": "RESTful API for document signing and template management. Complete API for managing templates, signing requests, teams, and company settings.",
    "version": "2.0.0",
    "contact": {
      "name": "API Support",
      "url": "https://firma.com/support"
    }
  },
  "servers": [
    {
      "url": "https://ielmshcswdhuacyjlpiy.supabase.co/functions/v1/signing-request-api",
      "description": "Production server"
    },
    {
      "url": "https://{partner_api_base}/v1",
      "description": "Custom partner domain",
      "variables": {
        "partner_api_base": {
          "default": "api.partner.com",
          "description": "Partner's custom API domain"
        }
      }
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key for authentication. Format: 'Bearer your-api-key'"
      },
      "JWTAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token authentication for embedded template access"
      }
    },
    "schemas": {
      "Template": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string"
          },
          "document_url": {
            "type": "string",
            "format": "uri"
          },
          "page_count": {
            "type": "integer",
            "minimum": 1
          },
          "expiration_hours": {
            "type": "integer",
            "minimum": 1
          },
          "settings": {
            "$ref": "#/components/schemas/DocumentSettings"
          },
          "created_date": {
            "type": "string",
            "format": "date-time"
          },
          "updated_date": {
            "type": "string",
            "format": "date-time"
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipient"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          }
        }
      },
      "CreateTemplate": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string"
          },
          "document_url": {
            "type": "string",
            "format": "uri"
          },
          "page_count": {
            "type": "integer",
            "minimum": 1
          },
          "expiration_hours": {
            "type": "integer",
            "minimum": 1
          },
          "settings": {
            "$ref": "#/components/schemas/DocumentSettings"
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateRecipient"
            }
          }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "sent",
              "in_progress",
              "completed",
              "cancelled"
            ]
          },
          "document_url": {
            "type": "string",
            "format": "uri"
          },
          "page_count": {
            "type": "integer",
            "minimum": 1
          },
          "expiration_hours": {
            "type": "integer",
            "minimum": 1
          },
          "settings": {
            "$ref": "#/components/schemas/DocumentSettings"
          },
          "created_date": {
            "type": "string",
            "format": "date-time"
          },
          "updated_date": {
            "type": "string",
            "format": "date-time"
          },
          "sent_date": {
            "type": "string",
            "format": "date-time"
          },
          "finished_date": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled_date": {
            "type": "string",
            "format": "date-time"
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipient"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          }
        }
      },
      "CreateDocument": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string"
          },
          "document_url": {
            "type": "string",
            "format": "uri"
          },
          "page_count": {
            "type": "integer",
            "minimum": 1
          },
          "expiration_hours": {
            "type": "integer",
            "minimum": 1
          },
          "settings": {
            "$ref": "#/components/schemas/DocumentSettings"
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateRecipient"
            }
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "protected": {
            "type": "boolean"
          },
          "created_date": {
            "type": "string",
            "format": "date-time"
          },
          "updated_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateTeam": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "account_owner": {
            "type": "string",
            "maxLength": 255
          },
          "account_owner_email": {
            "type": "string",
            "format": "email"
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "icon_url": {
            "type": "string",
            "format": "uri"
          },
          "credits": {
            "type": "integer",
            "minimum": 0
          },
          "created_date": {
            "type": "string",
            "format": "date-time"
          },
          "updated_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateCompany": {
        "type": "object",
        "required": [
          "name",
          "account_owner",
          "account_owner_email"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "account_owner": {
            "type": "string",
            "maxLength": 255
          },
          "account_owner_email": {
            "type": "string",
            "format": "email"
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "icon_url": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "DocumentSettings": {
        "type": "object",
        "properties": {
          "allow_editing_before_sending": {
            "type": "boolean",
            "default": false
          },
          "attach_pdf_on_finish": {
            "type": "boolean",
            "default": true
          },
          "allow_download": {
            "type": "boolean",
            "default": true
          },
          "use_signing_order": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "Recipient": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "designation": {
            "type": "string",
            "maxLength": 255
          },
          "order": {
            "type": "integer",
            "minimum": 1
          }
        }
      },
      "CreateRecipient": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "designation": {
            "type": "string",
            "maxLength": 255
          },
          "order": {
            "type": "integer",
            "minimum": 1
          }
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "signature",
              "text",
              "date",
              "checkbox",
              "dropdown",
              "radio"
            ]
          },
          "required": {
            "type": "boolean",
            "default": false
          },
          "recipient_id": {
            "type": "string",
            "format": "uuid"
          },
          "variable_name": {
            "type": "string",
            "maxLength": 100
          },
          "position": {
            "$ref": "#/components/schemas/FieldPosition"
          },
          "dropdown_options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "format_rules": {
            "type": "object"
          },
          "validation_rules": {
            "type": "object"
          }
        }
      },
      "FieldPosition": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number"
          },
          "y": {
            "type": "number"
          },
          "width": {
            "type": "number",
            "minimum": 1
          },
          "height": {
            "type": "number",
            "minimum": 1
          }
        }
      },
      "PaginationInfo": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "page_size": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_items": {
            "type": "integer"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/templates": {
      "get": {
        "summary": "List Templates",
        "description": "Retrieve all document templates for your team with pagination support.",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Templates retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Template"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/PaginationInfo"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Template",
        "description": "Create a new document template.",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Template created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          }
        }
      }
    },
    "/templates/{template_id}": {
      "get": {
        "summary": "Get Template",
        "description": "Retrieve a specific template with full resource details.",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Template (Save-All)",
        "description": "Update template with complete resource replacement.",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Template",
        "description": "Soft delete a template by setting deleted flag.",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template deleted successfully"
          }
        }
      }
    },
    "/templates/{template_id}/create-signing-request": {
      "post": {
        "summary": "Create Signing Request from Template",
        "description": "Create a new signing request based on this template.",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CreateRecipient"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Signing request created from template",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        }
      }
    },
    "/templates/{template_id}/embed-token": {
      "post": {
        "summary": "Generate Embedded Template Token",
        "description": "Generate JWT token for embedded template access.",
        "tags": [
          "Templates"
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "expiration_hours": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 168,
                    "default": 24
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Embedded token generated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "embed_url": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/embedded_template/{template_id}": {
      "get": {
        "summary": "Get Embedded Template",
        "description": "Access template via JWT authentication.",
        "tags": [
          "Embedded Templates"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Embedded Template",
        "description": "Update template via JWT authentication.",
        "tags": [
          "Embedded Templates"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          }
        }
      }
    },
    "/signing-requests": {
      "get": {
        "summary": "List Signing Requests",
        "description": "Retrieve all signing requests with pagination and filtering.",
        "tags": [
          "Signing Requests"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "sent",
                "in_progress",
                "completed",
                "cancelled"
              ]
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Signing requests retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/PaginationInfo"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Signing Request",
        "description": "Create a new signing request document.",
        "tags": [
          "Signing Requests"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Signing request created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        }
      }
    },
    "/signing-requests/{signing_request_id}": {
      "get": {
        "summary": "Get Signing Request",
        "description": "Retrieve specific signing request with complete details.",
        "tags": [
          "Signing Requests"
        ],
        "parameters": [
          {
            "name": "signing_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Signing request retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Signing Request",
        "description": "Update signing request with complete resource replacement.",
        "tags": [
          "Signing Requests"
        ],
        "parameters": [
          {
            "name": "signing_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signing request updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        }
      }
    },
    "/signing-requests/{signing_request_id}/send": {
      "post": {
        "summary": "Send Signing Request",
        "description": "Send signing request to all recipients via email.",
        "tags": [
          "Signing Requests"
        ],
        "parameters": [
          {
            "name": "signing_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "custom_message": {
                    "type": "string",
                    "maxLength": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signing request sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "sent_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/signing-requests/{signing_request_id}/cancel": {
      "post": {
        "summary": "Cancel Signing Request",
        "description": "Cancel active signing request and notify recipients.",
        "tags": [
          "Signing Requests"
        ],
        "parameters": [
          {
            "name": "signing_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Signing request cancelled"
          }
        }
      }
    },
    "/signing-requests/{signing_request_id}/remind": {
      "post": {
        "summary": "Send Reminder",
        "description": "Send reminder emails to pending recipients.",
        "tags": [
          "Signing Requests"
        ],
        "parameters": [
          {
            "name": "signing_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reminders sent successfully"
          }
        }
      }
    },
    "/signing-requests/{signing_request_id}/download": {
      "get": {
        "summary": "Download Completed Document",
        "description": "Download completed signed document as PDF.",
        "tags": [
          "Signing Requests"
        ],
        "parameters": [
          {
            "name": "signing_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pdf",
                "audit_trail"
              ],
              "default": "pdf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document downloaded successfully",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/teams": {
      "get": {
        "summary": "List Teams",
        "description": "Retrieve all teams with pagination and search support.",
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Teams retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Team"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/PaginationInfo"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Team",
        "description": "Create a new team within your company.",
        "tags": [
          "Teams"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeam"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Team created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      }
    },
    "/teams/{team_id}": {
      "get": {
        "summary": "Get Team",
        "description": "Retrieve specific team with complete details.",
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Team",
        "description": "Update existing team information.",
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Team updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        }
      }
    },
    "/company": {
      "get": {
        "summary": "Get Company Details",
        "description": "Retrieve comprehensive company information including credits and settings.",
        "tags": [
          "Company"
        ],
        "responses": {
          "200": {
            "description": "Company information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Company Details",
        "description": "Update company information including name, contacts, and branding.",
        "tags": [
          "Company"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompany"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Company updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Templates",
      "description": "Template management operations for reusable document structures"
    },
    {
      "name": "Embedded Templates",
      "description": "JWT-authenticated template access for embedded/white-label integrations"
    },
    {
      "name": "Signing Requests",
      "description": "Complete signing request lifecycle management and workflow operations"
    },
    {
      "name": "Teams",
      "description": "Team management and organizational structure with data isolation"
    },
    {
      "name": "Company",
      "description": "Company-level settings, account management, and branding"
    }
  ]
}